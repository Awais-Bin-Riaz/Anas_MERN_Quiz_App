[{"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\index.js":"1","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\redux\\store.js":"2","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\App.js":"3","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\Main.js":"4","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\redux\\question_reducer.js":"5","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\Quiz.js":"6","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\redux\\result_reducer.js":"7","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\Result.js":"8","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\helper\\helper.js":"9","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\Questions.js":"10","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\ResultTable.js":"11","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\hooks\\FetchQuestion.js":"12","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\hooks\\setResult.js":"13"},{"size":324,"mtime":1692374160042,"results":"14","hashOfConfig":"15"},{"size":321,"mtime":1692373060811,"results":"16","hashOfConfig":"15"},{"size":576,"mtime":1693425676311,"results":"17","hashOfConfig":"15"},{"size":904,"mtime":1692376148526,"results":"18","hashOfConfig":"15"},{"size":933,"mtime":1692372893634,"results":"19","hashOfConfig":"15"},{"size":1530,"mtime":1692372272740,"results":"20","hashOfConfig":"15"},{"size":822,"mtime":1692372995854,"results":"21","hashOfConfig":"15"},{"size":3459,"mtime":1692375927677,"results":"22","hashOfConfig":"15"},{"size":1020,"mtime":1692375461197,"results":"23","hashOfConfig":"15"},{"size":1835,"mtime":1692372173697,"results":"24","hashOfConfig":"15"},{"size":1216,"mtime":1692372537560,"results":"25","hashOfConfig":"15"},{"size":1460,"mtime":1693460920590,"results":"26","hashOfConfig":"15"},{"size":870,"mtime":1693460928368,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2fuyjy",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\index.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\redux\\store.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\App.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\Main.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\redux\\question_reducer.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\Quiz.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\redux\\result_reducer.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\Result.js",["69"],[],"import React, { useEffect } from 'react';\nimport '../styles/Result.css';\nimport { Link } from 'react-router-dom';\nimport ResultTable from './ResultTable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { attempts_Number, earnPoints_Number, flagResult } from '../helper/helper';\nimport { resetAllAction } from '../redux/question_reducer';\nimport { resetResultAction } from '../redux/result_reducer';\nimport { usePublishResult } from '../hooks/setResult';\n\nexport default function Result() {\n    const dispatch = useDispatch();\n    const { questions: { queue, answers }, result: { result, userId } } = useSelector(state => state);\n    const totalPoints = queue.length * 20;\n    const attempts = attempts_Number(result);\n    const earnPoints = earnPoints_Number(result, answers, 20);\n    const flag = flagResult(totalPoints, earnPoints);\n\n    usePublishResult({\n        result,\n        username: userId,\n        attempts,\n        points: earnPoints,\n        achived: flag ? \"Passed\" : \"Failed\"\n    });\n\n    function onRestart() {\n        dispatch(resetAllAction());\n        dispatch(resetResultAction());\n    }\n\n    return (\n        <div className='container'>\n            <h1 className='title text-light'>Quiz Application</h1>\n            <div className='result flex-center'>\n                <div className='flex'>\n                    <span style={{paddingRight: \"3vmax\", fontWeight:\"bolder\"}}>Username : </span>\n                    <span style={{fontWeight:\"bold\", fontSize:\"1.8vmax\", textShadow:\"2px 1px gray\"}} className='bold'>{userId || \"\"}</span>\n                </div>\n                <div className='flex'>\n                    <span style={{paddingRight: \"3vmax\", fontWeight:\"bolder\"}}>Total Quiz Points :</span>\n                    <span  style={{fontWeight:\"bold\", fontSize:\"1.8vmax\", textShadow:\"2px 1px gray\"}} className='bold'>{totalPoints || 0}</span>\n                </div>\n                <div className='flex'>\n                    <span style={{paddingRight: \"3vmax\", fontWeight:\"bolder\"}}>Total Questions :</span>\n                    <span style={{fontWeight:\"bold\", fontSize:\"1.8vmax\", textShadow:\"2px 1px gray\"}} className='bold'>{queue.length || 0}</span>\n                </div>\n                <div className='flex'>\n                    <span style={{paddingRight: \"3vmax\", fontWeight:\"bolder\"}}>Total Attempts :</span>\n                    <span style={{fontWeight:\"bold\", fontSize:\"1.8vmax\", textShadow:\"2px 1px gray\"}} className='bold'>{attempts || 0}</span>\n                </div>\n                <div className='flex'>\n                    <span style={{paddingRight: \"3vmax\", fontWeight:\"bolder\"}}>Total Earn Points :</span>\n                    <span style={{fontWeight:\"bold\", fontSize:\"1.8vmax\", textShadow:\"2px 1px gray\"}} className='bold'>{earnPoints || 0}</span>\n                </div>\n                <div className='flex'>\n                    <span style={{paddingRight: \"3vmax\", fontWeight:\"bolder\"}}>Quiz Result</span>\n                    <span style={{ fontWeight:\"bold\", fontSize:\"1.8vmax\", textShadow:\"2px 1px gray\",color: `${flag ? \"#2aff95\" : \"#ff2a66\"}` }} className='bold'>{flag ? \"Passed\" : \"Failed\"}</span>\n                </div>\n            </div>\n            <div className=\"start\">\n                <Link className='btn' to={'/'} onClick={onRestart}>Restart</Link>\n            </div>\n            <div className=\"container\">\n                <ResultTable />\n            </div>\n        </div>\n    );\n}\n","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\helper\\helper.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\Questions.js",["70","71","72"],[],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFetchQestion } from '../hooks/FetchQuestion';\nimport { updateResult } from '../hooks/setResult';\n\nexport default function Questions({ onChecked }) {\n    const [checked, setChecked] = useState(undefined);\n    const { trace } = useSelector(state => state.questions);\n    const result = useSelector(state => state.result.result);\n    const [{ isLoading, apiData, serverError }] = useFetchQestion();\n    const questions = useSelector(state => state.questions.queue[state.questions.trace]);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(updateResult({ trace, checked }));\n    }, [checked]);\n\n    function onSelect(i) {\n        onChecked(i);\n        setChecked(i);\n        dispatch(updateResult({ trace, checked }));\n    }\n\n    if (isLoading) return <h3 className='text-light'>isLoading</h3>;\n    if (serverError) return <h3 className='text-light'>{serverError || \"Unknown Error\"}</h3>;\n\n    return (\n        <div className='questions'>\n            <h2 className='text-light'>{questions?.question}</h2>\n            <ul key={questions?.id}>\n                {questions?.options.map((q, i) => (\n                    <li key={i}>\n                        <input \n                            type=\"radio\"\n                            value={false}\n                            name=\"options\"\n                            id={`q${i}-option`}\n                            onChange={() => onSelect(i)}\n                        />\n                        <label className='text-primary' htmlFor={`q${i}-option`}>{q}</label>\n                        <div className={`check ${result[trace] == i ? 'checked' : ''}`}></div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n","D:\\anas\\MERN Quiz App\\FrontEnd\\src\\components\\ResultTable.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\hooks\\FetchQuestion.js",[],[],"D:\\anas\\MERN Quiz App\\FrontEnd\\src\\hooks\\setResult.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":10,"column":25,"nodeType":"75","messageId":"76","endLine":10,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":16,"column":8,"nodeType":"80","endLine":16,"endColumn":17,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":41,"column":64,"nodeType":"84","messageId":"85","endLine":41,"endColumn":66},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'apiData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'trace'. Either include them or remove the dependency array.","ArrayExpression",["86"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"87","fix":"88"},"Update the dependencies array to be: [checked, dispatch, trace]",{"range":"89","text":"90"},[724,733],"[checked, dispatch, trace]"]