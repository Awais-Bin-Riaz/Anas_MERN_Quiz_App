{"ast":null,"code":"var _jsxFileName = \"D:\\\\anas\\\\MERN Quiz App\\\\frontend\\\\src\\\\components\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFetchQestion } from '../hooks/FetchQuestion';\nimport { updateResult } from '../hooks/setResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questions(_ref) {\n  _s();\n  let {\n    onChecked\n  } = _ref;\n  const [checked, setChecked] = useState(undefined);\n  const {\n    trace\n  } = useSelector(state => state.questions);\n  const result = useSelector(state => state.result.result);\n  const [{\n    isLoading,\n    apiData,\n    serverError\n  }] = useFetchQestion();\n  const questions = useSelector(state => state.questions.queue[state.questions.trace]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(updateResult({\n      trace,\n      checked\n    }));\n  }, [checked]);\n  function onSelect(i) {\n    onChecked(i);\n    setChecked(i);\n    dispatch(updateResult({\n      trace,\n      checked\n    }));\n  }\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 27\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: serverError || \"Unknown Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-light\",\n      children: questions === null || questions === void 0 ? void 0 : questions.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions === null || questions === void 0 ? void 0 : questions.options.map((q, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: false,\n          name: \"options\",\n          id: `q${i}-option`,\n          onChange: () => onSelect(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-primary\",\n          htmlFor: `q${i}-option`,\n          children: q\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `check ${result[trace] == i ? 'checked' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, questions === null || questions === void 0 ? void 0 : questions.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Questions, \"m+0zCwIufewSHQWeBtMvhA9P3y8=\", false, function () {\n  return [useSelector, useSelector, useFetchQestion, useSelector, useDispatch];\n});\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useFetchQestion","updateResult","Questions","onChecked","checked","setChecked","undefined","trace","state","questions","result","isLoading","apiData","serverError","queue","dispatch","onSelect","i","question","options","map","q","id"],"sources":["D:/anas/MERN Quiz App/frontend/src/components/Questions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFetchQestion } from '../hooks/FetchQuestion';\nimport { updateResult } from '../hooks/setResult';\n\nexport default function Questions({ onChecked }) {\n    const [checked, setChecked] = useState(undefined);\n    const { trace } = useSelector(state => state.questions);\n    const result = useSelector(state => state.result.result);\n    const [{ isLoading, apiData, serverError }] = useFetchQestion();\n    const questions = useSelector(state => state.questions.queue[state.questions.trace]);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(updateResult({ trace, checked }));\n    }, [checked]);\n\n    function onSelect(i) {\n        onChecked(i);\n        setChecked(i);\n        dispatch(updateResult({ trace, checked }));\n    }\n\n    if (isLoading) return <h3 className='text-light'>isLoading</h3>;\n    if (serverError) return <h3 className='text-light'>{serverError || \"Unknown Error\"}</h3>;\n\n    return (\n        <div className='questions'>\n            <h2 className='text-light'>{questions?.question}</h2>\n            <ul key={questions?.id}>\n                {questions?.options.map((q, i) => (\n                    <li key={i}>\n                        <input \n                            type=\"radio\"\n                            value={false}\n                            name=\"options\"\n                            id={`q${i}-option`}\n                            onChange={() => onSelect(i)}\n                        />\n                        <label className='text-primary' htmlFor={`q${i}-option`}>{q}</label>\n                        <div className={`check ${result[trace] == i ? 'checked' : ''}`}></div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,YAAY,QAAQ,oBAAoB;AAAC;AAElD,eAAe,SAASC,SAAS,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACS,SAAS,CAAC;EACjD,MAAM;IAAEC;EAAM,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,SAAS,CAAC;EACvD,MAAMC,MAAM,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACE,MAAM,CAACA,MAAM,CAAC;EACxD,MAAM,CAAC;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAY,CAAC,CAAC,GAAGb,eAAe,EAAE;EAC/D,MAAMS,SAAS,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,SAAS,CAACK,KAAK,CAACN,KAAK,CAACC,SAAS,CAACF,KAAK,CAAC,CAAC;EACpF,MAAMQ,QAAQ,GAAGjB,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACZmB,QAAQ,CAACd,YAAY,CAAC;MAAEM,KAAK;MAAEH;IAAQ,CAAC,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,SAASY,QAAQ,CAACC,CAAC,EAAE;IACjBd,SAAS,CAACc,CAAC,CAAC;IACZZ,UAAU,CAACY,CAAC,CAAC;IACbF,QAAQ,CAACd,YAAY,CAAC;MAAEM,KAAK;MAAEH;IAAQ,CAAC,CAAC,CAAC;EAC9C;EAEA,IAAIO,SAAS,EAAE,oBAAO;IAAI,SAAS,EAAC,YAAY;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAe;EAC/D,IAAIE,WAAW,EAAE,oBAAO;IAAI,SAAS,EAAC,YAAY;IAAA,UAAEA,WAAW,IAAI;EAAe;IAAA;IAAA;IAAA;EAAA,QAAM;EAExF,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAI,SAAS,EAAC,YAAY;MAAA,UAAEJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAES;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,eACrD;MAAA,UACKT,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEU,OAAO,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEJ,CAAC,kBACzB;QAAA,wBACI;UACI,IAAI,EAAC,OAAO;UACZ,KAAK,EAAE,KAAM;UACb,IAAI,EAAC,SAAS;UACd,EAAE,EAAG,IAAGA,CAAE,SAAS;UACnB,QAAQ,EAAE,MAAMD,QAAQ,CAACC,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAC9B,eACF;UAAO,SAAS,EAAC,cAAc;UAAC,OAAO,EAAG,IAAGA,CAAE,SAAS;UAAA,UAAEI;QAAC;UAAA;UAAA;UAAA;QAAA,QAAS,eACpE;UAAK,SAAS,EAAG,SAAQX,MAAM,CAACH,KAAK,CAAC,IAAIU,CAAC,GAAG,SAAS,GAAG,EAAG;QAAE;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA,GATjEA,CAAC;QAAA;QAAA;QAAA;MAAA,QAWb;IAAC,GAbGR,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,EAAE;MAAA;MAAA;MAAA;IAAA,QAcjB;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEd;AAAC,GAzCuBpB,SAAS;EAAA,QAEXH,WAAW,EACdA,WAAW,EACoBC,eAAe,EAC3CD,WAAW,EACZD,WAAW;AAAA;AAAA,KANRI,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}