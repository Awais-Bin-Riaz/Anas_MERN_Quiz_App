{"ast":null,"code":"import { postServerData } from '../helper/helper';\nimport * as Action from '../redux/result_reducer';\nexport const PushAnswer = result => async dispatch => {\n  try {\n    await dispatch(Action.pushResultAction(result));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateResult = index => async dispatch => {\n  try {\n    dispatch(Action.updateResultAction(index));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const usePublishResult = resultData => {\n  const {\n    result,\n    username\n  } = resultData;\n  (async () => {\n    try {\n      if (result.length !== 0 && !username) throw new Error(\"Couldn't get Result\");\n      await postServerData(`https://quiz-app-6hr9.onrender.com/result`, resultData, data => data);\n      // await postServerData(`http://localhost:5000/api/result`, resultData, data => data);\n    } catch (error) {\n      console.log(error);\n    }\n  })();\n};","map":{"version":3,"names":["postServerData","Action","PushAnswer","result","dispatch","pushResultAction","error","console","log","updateResult","index","updateResultAction","usePublishResult","resultData","username","length","Error","data"],"sources":["D:/anas/MERN Quiz App/FrontEnd/src/hooks/setResult.js"],"sourcesContent":["import { postServerData } from '../helper/helper';\nimport * as Action from '../redux/result_reducer';\n\nexport const PushAnswer = result => async dispatch => {\n    try {\n        await dispatch(Action.pushResultAction(result));\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const updateResult = index => async dispatch => {\n    try {\n        dispatch(Action.updateResultAction(index));\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const usePublishResult = resultData => {\n    const { result, username } = resultData;\n    (async () => {\n        try {\n            if (result.length !== 0 && !username) throw new Error(\"Couldn't get Result\");\n            await postServerData(`https://quiz-app-6hr9.onrender.com/result`, resultData, data => data);\n            // await postServerData(`http://localhost:5000/api/result`, resultData, data => data);\n        } catch (error) {\n            console.log(error);\n        }\n    })();\n};"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAO,KAAKC,MAAM,MAAM,yBAAyB;AAEjD,OAAO,MAAMC,UAAU,GAAGC,MAAM,IAAI,MAAMC,QAAQ,IAAI;EAClD,IAAI;IACA,MAAMA,QAAQ,CAACH,MAAM,CAACI,gBAAgB,CAACF,MAAM,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGC,KAAK,IAAI,MAAMN,QAAQ,IAAI;EACnD,IAAI;IACAA,QAAQ,CAACH,MAAM,CAACU,kBAAkB,CAACD,KAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAGC,UAAU,IAAI;EAC1C,MAAM;IAAEV,MAAM;IAAEW;EAAS,CAAC,GAAGD,UAAU;EACvC,CAAC,YAAY;IACT,IAAI;MACA,IAAIV,MAAM,CAACY,MAAM,KAAK,CAAC,IAAI,CAACD,QAAQ,EAAE,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;MAC5E,MAAMhB,cAAc,CAAE,2CAA0C,EAAEa,UAAU,EAAEI,IAAI,IAAIA,IAAI,CAAC;MAC3F;IACJ,CAAC,CAAC,OAAOX,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC,GAAG;AACR,CAAC"},"metadata":{},"sourceType":"module"}